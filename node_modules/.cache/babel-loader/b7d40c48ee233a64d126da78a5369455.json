{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riccardo\\\\Desktop\\\\mercatino-pulci-restAPI\\\\client\\\\src\\\\routes\\\\home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ScrollMenu } from \"react-horizontal-scrolling-menu\";\nimport { LeftArrow, RightArrow } from \"../component/home/arrows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst elemPrefix = \"test\";\n\nconst getId = index => `${elemPrefix}${index}`;\n\nconst getItems = () => Array(20).fill(0).map((_, ind) => ({\n  id: getId(ind)\n}));\n\nfunction Home() {\n  _s();\n\n  const [items] = React.useState(getItems);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example\",\n      style: {\n        paddingTop: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ScrollMenu, {\n          LeftArrow: LeftArrow,\n          RightArrow: RightArrow,\n          onWheel: onWheel,\n          children: items.map(_ref => {\n            let {\n              id\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Card, {\n              title: id,\n              itemId: id // NOTE: itemId is required for track items\n\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"bT7RrV9PD9+hEytGnSY8KAL+3d8=\");\n\n_c = Home;\nexport default Home;\n\nfunction onWheel(apiObj, ev) {\n  const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\n\n  if (isThouchpad) {\n    ev.stopPropagation();\n    return;\n  }\n\n  if (ev.deltaY < 0) {\n    apiObj.scrollNext();\n  } else if (ev.deltaY > 0) {\n    apiObj.scrollPrev();\n  }\n}\n/*\r\n<div>\r\n        {(() => {\r\n          const options = [];\r\n\r\n          for (let i = 1; i <= 6; i++) {\r\n            options.push(\r\n              <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n                <div\r\n                  style={{\r\n                    width: \"10em\",\r\n                    height: \"2em\",\r\n                    backgroundColor: \"#ddd\",\r\n                  }}\r\n                ></div>\r\n              </ScrollMenu>\r\n            );\r\n          }\r\n\r\n          return options;\r\n        })()}\r\n      </div>*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Riccardo/Desktop/mercatino-pulci-restAPI/client/src/routes/home.tsx"],"names":["React","ScrollMenu","LeftArrow","RightArrow","elemPrefix","getId","index","getItems","Array","fill","map","_","ind","id","Home","items","useState","paddingTop","onWheel","apiObj","ev","isThouchpad","Math","abs","deltaX","deltaY","stopPropagation","scrollNext","scrollPrev"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA8C,iCAA9C;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,0BAAtC;;;AAIA,MAAMC,UAAU,GAAG,MAAnB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAoB,GAAEF,UAAW,GAAEE,KAAM,EAAvD;;AAEA,MAAMC,QAAQ,GAAG,MACfC,KAAK,CAAC,EAAD,CAAL,CACGC,IADH,CACQ,CADR,EAEGC,GAFH,CAEO,CAACC,CAAD,EAAIC,GAAJ,MAAa;AAAEC,EAAAA,EAAE,EAAER,KAAK,CAACO,GAAD;AAAX,CAAb,CAFP,CADF;;AAKA,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,IAAUf,KAAK,CAACgB,QAAN,CAAeT,QAAf,CAAhB;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAAEU,QAAAA,UAAU,EAAE;AAAd,OAAhC;AAAA,6BACE;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,SAAS,EAAEf,SADb;AAEE,UAAA,UAAU,EAAEC,UAFd;AAGE,UAAA,OAAO,EAAEe,OAHX;AAAA,oBAKGH,KAAK,CAACL,GAAN,CAAU;AAAA,gBAAC;AAAEG,cAAAA;AAAF,aAAD;AAAA,gCACT,QAAC,IAAD;AACE,cAAA,KAAK,EAAEA,EADT;AAEE,cAAA,MAAM,EAAEA,EAFV,CAEc;;AAFd,eAGOA,EAHP;AAAA;AAAA;AAAA;AAAA,oBADS;AAAA,WAAV;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD;;GAxBQC,I;;KAAAA,I;AAyBT,eAAeA,IAAf;;AAEA,SAASI,OAAT,CAAiBC,MAAjB,EAAkDC,EAAlD,EAA8E;AAC5E,QAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASH,EAAE,CAACI,MAAZ,MAAwB,CAAxB,IAA6BF,IAAI,CAACC,GAAL,CAASH,EAAE,CAACK,MAAZ,IAAsB,EAAvE;;AAEA,MAAIJ,WAAJ,EAAiB;AACfD,IAAAA,EAAE,CAACM,eAAH;AACA;AACD;;AAED,MAAIN,EAAE,CAACK,MAAH,GAAY,CAAhB,EAAmB;AACjBN,IAAAA,MAAM,CAACQ,UAAP;AACD,GAFD,MAEO,IAAIP,EAAE,CAACK,MAAH,GAAY,CAAhB,EAAmB;AACxBN,IAAAA,MAAM,CAACS,UAAP;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\n\r\nimport { LeftArrow, RightArrow } from \"../component/home/arrows\";\r\n\r\ntype scrollVisibilityApiType = React.ContextType<typeof VisibilityContext>;\r\n\r\nconst elemPrefix = \"test\";\r\nconst getId = (index: number) => `${elemPrefix}${index}`;\r\n\r\nconst getItems = () =>\r\n  Array(20)\r\n    .fill(0)\r\n    .map((_, ind) => ({ id: getId(ind) }));\r\n\r\nfunction Home() {\r\n  const [items] = React.useState(getItems);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"example\" style={{ paddingTop: \"100px\" }}>\r\n        <div>\r\n          <ScrollMenu\r\n            LeftArrow={LeftArrow}\r\n            RightArrow={RightArrow}\r\n            onWheel={onWheel}\r\n          >\r\n            {items.map(({ id }) => (\r\n              <Card\r\n                title={id}\r\n                itemId={id} // NOTE: itemId is required for track items\r\n                key={id}\r\n              />\r\n            ))}\r\n          </ScrollMenu>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n\r\nfunction onWheel(apiObj: scrollVisibilityApiType, ev: React.WheelEvent): void {\r\n  const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\r\n\r\n  if (isThouchpad) {\r\n    ev.stopPropagation();\r\n    return;\r\n  }\r\n\r\n  if (ev.deltaY < 0) {\r\n    apiObj.scrollNext();\r\n  } else if (ev.deltaY > 0) {\r\n    apiObj.scrollPrev();\r\n  }\r\n}\r\n\r\n/*\r\n<div>\r\n        {(() => {\r\n          const options = [];\r\n\r\n          for (let i = 1; i <= 6; i++) {\r\n            options.push(\r\n              <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n                <div\r\n                  style={{\r\n                    width: \"10em\",\r\n                    height: \"2em\",\r\n                    backgroundColor: \"#ddd\",\r\n                  }}\r\n                ></div>\r\n              </ScrollMenu>\r\n            );\r\n          }\r\n\r\n          return options;\r\n        })()}\r\n      </div>*/\r\n"]},"metadata":{},"sourceType":"module"}