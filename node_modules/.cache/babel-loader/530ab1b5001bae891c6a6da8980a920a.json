{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riccardo\\\\Desktop\\\\mercatino-pulci-restAPI\\\\client\\\\src\\\\component\\\\home\\\\arrows.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { VisibilityContext } from \"react-horizontal-scrolling-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Arrow(_ref) {\n  let {\n    children,\n    disabled,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    onClick: onClick,\n    style: {\n      cursor: \"pointer\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      right: \"1%\",\n      opacity: disabled ? \"0\" : \"1\",\n      userSelect: \"none\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Arrow;\nexport function LeftArrow() {\n  _s();\n\n  const {\n    // getItemById,\n    getPrevItem,\n    isFirstItemVisible,\n    scrollToItem,\n    visibleItemsWithoutSeparators,\n    initComplete\n  } = React.useContext(VisibilityContext);\n  const [disabled, setDisabled] = React.useState(!initComplete || initComplete && isFirstItemVisible);\n  React.useEffect(() => {\n    // NOTE: detect if whole component visible\n    if (visibleItemsWithoutSeparators.length) {\n      setDisabled(isFirstItemVisible);\n    }\n  }, [isFirstItemVisible, visibleItemsWithoutSeparators]);\n\n  const clickHandler = () => {\n    var _prevItem$entry;\n\n    const prevItem = getPrevItem();\n    scrollToItem(prevItem === null || prevItem === void 0 ? void 0 : (_prevItem$entry = prevItem.entry) === null || _prevItem$entry === void 0 ? void 0 : _prevItem$entry.target, \"smooth\", \"start\"); // OR\n    // scrollToItem(\n    //   getItemById(visibleItemsWithoutSeparators.slice(-2)[0]),\n    //   \"smooth\",\n    //   \"end\"\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(Arrow, {\n    disabled: disabled,\n    onClick: clickHandler,\n    children: \"Left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeftArrow, \"Rw15to3YF5q9SoyeuLuwr/02IyU=\");\n\n_c2 = LeftArrow;\nexport function RightArrow() {\n  _s2();\n\n  const {\n    getItemById,\n    getNextItem,\n    isLastItemVisible,\n    scrollToItem,\n    visibleItemsWithoutSeparators\n  } = React.useContext(VisibilityContext);\n  const [disabled, setDisabled] = React.useState(!visibleItemsWithoutSeparators.length && isLastItemVisible);\n  React.useEffect(() => {\n    if (visibleItemsWithoutSeparators.length) {\n      setDisabled(isLastItemVisible);\n    }\n  }, [isLastItemVisible, visibleItemsWithoutSeparators]);\n\n  const clickHandler = () => {\n    const nextItem = getNextItem(); //scrollToItem(nextItem?.entry?.target, \"smooth\", \"end\");\n    // OR\n\n    scrollToItem(getItemById(visibleItemsWithoutSeparators[1]), \"smooth\", \"start\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Arrow, {\n    disabled: disabled,\n    onClick: clickHandler,\n    children: \"Right\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RightArrow, \"DtyKXKTHUAgyCD1y+f2YcPsqNzE=\");\n\n_c3 = RightArrow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Arrow\");\n$RefreshReg$(_c2, \"LeftArrow\");\n$RefreshReg$(_c3, \"RightArrow\");","map":{"version":3,"sources":["C:/Users/Riccardo/Desktop/mercatino-pulci-restAPI/client/src/component/home/arrows.tsx"],"names":["React","VisibilityContext","Arrow","children","disabled","onClick","cursor","display","flexDirection","justifyContent","right","opacity","userSelect","LeftArrow","getPrevItem","isFirstItemVisible","scrollToItem","visibleItemsWithoutSeparators","initComplete","useContext","setDisabled","useState","useEffect","length","clickHandler","prevItem","entry","target","RightArrow","getItemById","getNextItem","isLastItemVisible","nextItem"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\n\r\nfunction Arrow({\r\n  children,\r\n  disabled,\r\n  onClick,\r\n}: {\r\n  children: React.ReactNode;\r\n  disabled: boolean;\r\n  onClick: VoidFunction;\r\n}) {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      style={{\r\n        cursor: \"pointer\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        right: \"1%\",\r\n        opacity: disabled ? \"0\" : \"1\",\r\n        userSelect: \"none\",\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function LeftArrow() {\r\n  const {\r\n    // getItemById,\r\n    getPrevItem,\r\n    isFirstItemVisible,\r\n    scrollToItem,\r\n    visibleItemsWithoutSeparators,\r\n    initComplete,\r\n  } = React.useContext(VisibilityContext);\r\n\r\n  const [disabled, setDisabled] = React.useState(\r\n    !initComplete || (initComplete && isFirstItemVisible)\r\n  );\r\n  React.useEffect(() => {\r\n    // NOTE: detect if whole component visible\r\n    if (visibleItemsWithoutSeparators.length) {\r\n      setDisabled(isFirstItemVisible);\r\n    }\r\n  }, [isFirstItemVisible, visibleItemsWithoutSeparators]);\r\n\r\n  const clickHandler = () => {\r\n    const prevItem = getPrevItem();\r\n    scrollToItem(prevItem?.entry?.target, \"smooth\", \"start\");\r\n    // OR\r\n    // scrollToItem(\r\n    //   getItemById(visibleItemsWithoutSeparators.slice(-2)[0]),\r\n    //   \"smooth\",\r\n    //   \"end\"\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <Arrow disabled={disabled} onClick={clickHandler}>\r\n      Left\r\n    </Arrow>\r\n  );\r\n}\r\n\r\nexport function RightArrow() {\r\n  const {\r\n    getItemById,\r\n    getNextItem,\r\n    isLastItemVisible,\r\n    scrollToItem,\r\n    visibleItemsWithoutSeparators,\r\n  } = React.useContext(VisibilityContext);\r\n\r\n  const [disabled, setDisabled] = React.useState(\r\n    !visibleItemsWithoutSeparators.length && isLastItemVisible\r\n  );\r\n  React.useEffect(() => {\r\n    if (visibleItemsWithoutSeparators.length) {\r\n      setDisabled(isLastItemVisible);\r\n    }\r\n  }, [isLastItemVisible, visibleItemsWithoutSeparators]);\r\n\r\n  const clickHandler = () => {\r\n    const nextItem = getNextItem();\r\n    //scrollToItem(nextItem?.entry?.target, \"smooth\", \"end\");\r\n    // OR\r\n    scrollToItem(\r\n      getItemById(visibleItemsWithoutSeparators[1]),\r\n      \"smooth\",\r\n      \"start\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Arrow disabled={disabled} onClick={clickHandler}>\r\n      Right\r\n    </Arrow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}