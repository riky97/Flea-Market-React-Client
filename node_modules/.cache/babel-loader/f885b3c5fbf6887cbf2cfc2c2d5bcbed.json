{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riccardo\\\\Desktop\\\\mercatino-pulci-restAPI\\\\client\\\\src\\\\routes\\\\profile.tsx\";\nimport { Avatar } from \"antd\";\nimport React from \"react\";\nimport { AntDesignOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      result: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:9000/profile\").then(response => {\n      const data = response.data; //console.log(response.data);\n\n      const cookies = new Cookies();\n      const session = cookies.get(\"session\");\n\n      if (session !== undefined) {\n        for (const [key, value] of Object.entries(data)) {\n          //console.log(`${key}: ${value}`);\n          console.log(session.token);\n\n          if (key === session.token) {\n            Object.assign(this.state.result, value);\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.result);\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      size: {\n        xs: 24,\n        sm: 32,\n        md: 40,\n        lg: 64,\n        xl: 80,\n        xxl: 100\n      },\n      icon: /*#__PURE__*/_jsxDEV(AntDesignOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Riccardo/Desktop/mercatino-pulci-restAPI/client/src/routes/profile.tsx"],"names":["Avatar","React","AntDesignOutlined","axios","Cookies","Profile","Component","state","result","componentDidMount","get","then","response","data","cookies","session","undefined","key","value","Object","entries","console","log","token","assign","render","xs","sm","md","lg","xl","xxl"],"mappings":";AAAA,SAASA,MAAT,QAA+B,MAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAuBC,iBAAvB,QAAgD,mBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,MAAM,EAAE;AADF,KAD4B;AAAA;;AAIpCC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,KAAK,CAACO,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5D,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB,CAD4D,CAE5D;;AACA,YAAMC,OAAO,GAAG,IAAIV,OAAJ,EAAhB;AACA,YAAMW,OAAY,GAAGD,OAAO,CAACJ,GAAR,CAAY,SAAZ,CAArB;;AACA,UAAIK,OAAO,KAAKC,SAAhB,EAA2B;AACzB,aAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeP,IAAf,CAA3B,EAAiD;AAC/C;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,KAApB;;AACA,cAAIN,GAAG,KAAKF,OAAO,CAACQ,KAApB,EAA2B;AACzBJ,YAAAA,MAAM,CAACK,MAAP,CAAc,KAAKjB,KAAL,CAAWC,MAAzB,EAAiCU,KAAjC;AACD;AACF;AACF;AACF,KAdD;AAeD;;AACDO,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,MAAvB;AACA,wBACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAE;AAAEkB,QAAAA,EAAE,EAAE,EAAN;AAAUC,QAAAA,EAAE,EAAE,EAAd;AAAkBC,QAAAA,EAAE,EAAE,EAAtB;AAA0BC,QAAAA,EAAE,EAAE,EAA9B;AAAkCC,QAAAA,EAAE,EAAE,EAAtC;AAA0CC,QAAAA,GAAG,EAAE;AAA/C,OADR;AAEE,MAAA,IAAI,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA7BmC;;AAgCtC,eAAe1B,OAAf","sourcesContent":["import { Avatar, Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { UserOutlined, AntDesignOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    result: {},\r\n  };\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:9000/profile\").then((response) => {\r\n      const data = response.data;\r\n      //console.log(response.data);\r\n      const cookies = new Cookies();\r\n      const session: any = cookies.get(\"session\");\r\n      if (session !== undefined) {\r\n        for (const [key, value] of Object.entries(data)) {\r\n          //console.log(`${key}: ${value}`);\r\n          console.log(session.token);\r\n          if (key === session.token) {\r\n            Object.assign(this.state.result, value);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.state.result);\r\n    return (\r\n      <Avatar\r\n        size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\r\n        icon={<AntDesignOutlined />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}